<?xml version='1.0' encoding='UTF-8'?>
<project name='arwo-app-tomcat6' default='main' basedir='.'>

    <!-- application version -->
<!--
    <propertyfile file='${user.home}/.arwo/version.properties' comment='version.properties'>
        <entry key='arwo.build' type='int' operation='+' value='1' pattern='0'/>
    </propertyfile>
-->
    <property file='${user.home}/.arwo/version.properties'/>
    <fail unless='arwo.version'/>
    <fail unless='arwo.build'/>
    <tstamp>
        <format property='timestamp' pattern='yyyy-MM-dd&apos;T&apos;HH:mm:ss&apos;Z&apos;' timezone='UTC'/>
    </tstamp>
    <property name='Implementation-Version' value='${arwo.build} ${timestamp}'/>
    <property name='Specification-Version' value='${arwo.version}'/>
    <echo message='Implementation-Version = ${Implementation-Version}'/>
    <echo message='Specification-Version = ${Specification-Version}'/>

    <!--fixed-->
    <property name='project.dir' location='${basedir}/../../../../../..'/>
    <property name='src.core.dir' location='${project.dir}/src/main/core/java'/>
    <property name='src.lib.dir' location='${project.dir}/src/main/lib/java'/>
    <property name='src.app.dir' location='${project.dir}/src/main/app/java'/>
    <!--transient-->
    <property name='target.dir' value='${project.dir}/target'/>
    <property name='classes.realm.dir' value='${target.dir}/app-tomcat6/classes-realm'/>
    <property name='classes.app.dir' value='${target.dir}/app-tomcat6/classes-app'/>
    <property name='war.app.dir' value='${target.dir}/app-tomcat6/war-app'/>
    <property name='artifact.dir' value='${target.dir}/app-tomcat6/artifact'/>
    <!-- tomcat image -->
    <import file='${project.dir}/src/test/app/resources/ant/tomcat6/build.tomcat6.xml'/>
    <!-- library paths -->
    <property name='m2.dir' value='${user.home}/.m2/repository'/>

    <fail message='&quot;${project.dir}&quot; does not exist'>
        <condition>
            <not>
                <available file='${project.dir}'/>
            </not>
        </condition>
    </fail>

    <fileset dir='${tomcat.dir}' id='libs-servlet-api'>
        <include name='lib/servlet-api.jar'/>
    </fileset>

    <fileset dir='${tomcat.dir}' id='libs-tomcat6'>
        <include name='lib/catalina.jar'/>
        <include name='lib/servlet-api.jar'/>
    </fileset>

    <fileset dir='${m2.dir}' id='libs-ganymed'>
        <include name='ch/ethz/ganymed/ganymed-ssh2/262/ganymed-ssh2-262.jar'/>
    </fileset>

    <fileset dir='${m2.dir}' id='libs-jcifs'>
        <include name='jcifs/jcifs/1.3.17/jcifs-1.3.17.jar'/>
    </fileset>

    <fileset dir='${m2.dir}' id='libs-j-interop'>
        <include name='org/glassfish/main/external/j-interop-repackaged/4.1/j-interop-repackaged-4.1.jar'/>
    </fileset>

    <fileset dir='${m2.dir}' id='libs-sardine'>
        <include name='com/github/lookfirst/sardine/5.6/sardine-5.6.jar'/>
        <include name='org/apache/httpcomponents/httpclient/4.4.1/httpclient-4.4.1.jar'/>
        <include name='org/apache/httpcomponents/httpcore/4.4.1/httpcore-4.4.1.jar'/>
    </fileset>

    <fileset dir='${m2.dir}' id='libs-mail'>
        <include name='com/sun/mail/javax.mail/1.5.4/javax.mail-1.5.4.jar'/>
    </fileset>

    <path id='classpath-app'>
        <fileset refid='libs-servlet-api'/>
        <fileset refid='libs-ganymed'/>
        <fileset refid='libs-jcifs'/>
        <fileset refid='libs-j-interop'/>
        <fileset refid='libs-sardine'/>
        <fileset refid='libs-mail'/>
    </path>

    <path id='classpath-tomcat6'>
        <fileset refid='libs-tomcat6'/>
    </path>

    <target name='clean' description='clean up generated resources'>
        <delete dir='${classes.realm.dir}'/>
        <delete dir='${classes.app.dir}'/>
    </target>

    <target name='compile-realm' description='compile project source'>
        <mkdir dir='${classes.realm.dir}'/>
        <depend destdir='${classes.realm.dir}' srcdir='${src.core.dir}'/>
        <depend destdir='${classes.realm.dir}' srcdir='${src.lib.dir}'/>
        <javac destdir='${classes.realm.dir}' classpathref='classpath-app' includeantruntime='false' debug='on'>
            <compilerarg value='-Xlint:all'/>
            <src path='${src.core.dir}'/>
            <include name='io/github/greyp9/arwo/core/codec/b64/**/*.java'/>
            <include name='io/github/greyp9/arwo/core/codec/hash/secure/**/*.java'/>
            <include name='io/github/greyp9/arwo/core/naming/**/*.java'/>
            <include name='io/github/greyp9/arwo/core/security/realm/**/*.java'/>
        </javac>
        <javac destdir='${classes.realm.dir}' classpathref='classpath-tomcat6' includeantruntime='false' debug='on'>
            <compilerarg value='-Xlint:all'/>
            <src path='${src.lib.dir}'/>
            <include name='io/github/greyp9/arwo/lib/tomcat6/realm/**/*.java'/>
        </javac>
        <exec executable='tree' failifexecutionfails='false'>
            <arg value='${classes.realm.dir}'/>
        </exec>
    </target>

    <target name='jar-realm' depends='compile-realm'>
        <mkdir dir='${artifact.dir}'/>
        <jar destfile='${artifact.dir}/arwo-realm.jar'>
            <fileset dir='${classes.realm.dir}'>
                <include name='**/*.class'/>
            </fileset>
            <manifest>
                <attribute name='Implementation-Version' value='${Implementation-Version}'/>
                <attribute name='Specification-Version' value='${Specification-Version}'/>
            </manifest>
        </jar>
    </target>

    <target name='compile-app' description='compile project source'>
        <mkdir dir='${classes.app.dir}'/>
        <depend destdir='${classes.app.dir}' srcdir='${src.core.dir}'/>
        <depend destdir='${classes.app.dir}' srcdir='${src.app.dir}'/>

        <javac destdir='${classes.app.dir}' classpathref='classpath-app' includeantruntime='false' debug='on'>
            <compilerarg value='-XDignore.symbol.file' description='stack-overflow-13855700'/>
            <src path='${src.core.dir}'/>
            <include name='io/github/greyp9/arwo/core/xml/priv/XmlPriv.java'/>
        </javac>

        <javac destdir='${classes.app.dir}' classpathref='classpath-app' includeantruntime='false' debug='on'>
            <compilerarg value='-Xlint:all'/>
            <src path='${src.core.dir}'/>
            <src path='${src.lib.dir}'/>
            <src path='${src.app.dir}'/>
            <!--webapp initialization-->
            <include name='io/github/greyp9/arwo/app/exec/servlet/ExecutorServlet.java'/>
            <include name='io/github/greyp9/arwo/app/daemon/connect/servlet/ConnectServlet.java'/>
            <include name='io/github/greyp9/arwo/app/lifecycle/servlet/AppLifecycleServlet.java'/>
            <include name='io/github/greyp9/arwo/app/naming/servlet/NamingServlet.java'/>
            <include name='io/github/greyp9/arwo/app/realm/servlet/RealmServlet.java'/>
            <!--app cron context-->
            <include name='io/github/greyp9/arwo/app/cron/servlet/CronServlet.java'/>
            <!--app dashboard-->
            <include name='io/github/greyp9/arwo/app/dash/servlet/DashServlet.java'/>
            <!--webapp settings-->
            <include name='io/github/greyp9/arwo/app/xed/servlet/Xed1Servlet.java'/>
            <!--ssh-->
            <include name='io/github/greyp9/arwo/app/ssh/servlet/SFTPServlet.java'/>
            <include name='io/github/greyp9/arwo/app/ssh/servlet/SHServlet.java'/>
            <!--cifs-->
            <include name='io/github/greyp9/arwo/app/cifs/servlet/CIFSServlet.java'/>
            <!--interop-->
            <include name='io/github/greyp9/arwo/app/interop/servlet/SHServlet.java'/>
            <!--webdav-->
            <include name='io/github/greyp9/arwo/app/webdav/servlet/WebDAVServlet.java'/>
            <!--local-->
            <include name='io/github/greyp9/arwo/app/local/servlet/LFSServlet.java'/>
            <include name='io/github/greyp9/arwo/app/local/servlet/SHServlet.java'/>
            <!--jdbc-->
            <include name='io/github/greyp9/arwo/app/jdbc/servlet/JDBCServlet.java'/>
            <!--mail-->
            <include name='io/github/greyp9/arwo/app/mail/smtp/servlet/SMTPServlet.java'/>
            <include name='io/github/greyp9/arwo/app/mail/imap/servlet/IMAPServlet.java'/>
            <include name='io/github/greyp9/arwo/app/mail/pop3/servlet/POP3Servlet.java'/>
            <!--cache-->
            <include name='io/github/greyp9/arwo/app/cache/servlet/CacheServlet.java'/>
            <!--cron-->
            <include name='io/github/greyp9/arwo/core/cron/instance/*Runnable.java'/>
            <!--cron-->
            <include name='io/github/greyp9/arwo/app/cifs/fs/cron/*Runnable.java'/>
            <include name='io/github/greyp9/arwo/app/interop/sh/cron/*Runnable.java'/>
            <include name='io/github/greyp9/arwo/app/jdbc/sh/cron/*Runnable.java'/>
            <include name='io/github/greyp9/arwo/app/local/sh/cron/*Runnable.java'/>
            <include name='io/github/greyp9/arwo/app/mail/**/cron/*Runnable.java'/>
            <include name='io/github/greyp9/arwo/app/ssh/sftp/cron/*Runnable.java'/>
            <include name='io/github/greyp9/arwo/app/ssh/sh/cron/*Runnable.java'/>
            <include name='io/github/greyp9/arwo/app/webdav/fs/cron/*Runnable.java'/>
            <!--table testing-->
            <include name='io/github/greyp9/arwo/app/apptest/fs/servlet/FileSystemServlet.java'/>

            <!--included in realm jar (process scope)-->
            <exclude name='io/github/greyp9/arwo/core/codec/b64/**/*.java'/>
            <exclude name='io/github/greyp9/arwo/core/codec/hash/secure/**/*.java'/>
            <exclude name='io/github/greyp9/arwo/core/naming/**/*.java'/>
            <exclude name='io/github/greyp9/arwo/core/security/realm/**/*.java'/>
        </javac>
        <exec executable='tree' failifexecutionfails='false'>
            <arg value='${classes.app.dir}'/>
        </exec>
    </target>

    <target name='i18n'>
        <property name='ant.i18n.dir' value='${project.dir}/src/test/app/resources/ant/pseudo-i18n'/>
        <ant antfile='${ant.i18n.dir}/build.i18n.xml' dir='${ant.i18n.dir}'/>
    </target>

    <target name='i18n-clean'>
        <property name='ant.i18n.dir' value='${project.dir}/src/test/app/resources/ant/pseudo-i18n'/>
        <ant antfile='${ant.i18n.dir}/build.i18n.xml' dir='${ant.i18n.dir}' target='i18n-clean'/>
    </target>

    <target name='jar-app' depends='compile-app'>
        <mkdir dir='${artifact.dir}'/>
        <jar destfile='${artifact.dir}/arwo.jar'>
            <fileset dir='${classes.app.dir}'>
                <include name='**/*.class'/>
            </fileset>
            <fileset dir='${project.dir}/src/main/core/resources/arwo-jar'/>
            <fileset dir='${project.dir}/src/main/app/resources/arwo-jar'/>
            <manifest>
                <attribute name='Implementation-Version' value='${Implementation-Version}'/>
                <attribute name='Specification-Version' value='${Specification-Version}'/>
            </manifest>
        </jar>
    </target>

    <target name='war-app'>
        <mkdir dir='${war.app.dir}'/>
        <copy todir='${war.app.dir}' overwrite='true'>
            <fileset dir='${project.dir}/src/main/app/resources/webapp/arwo-war'>
                <exclude name='**/*.xcf'/>
            </fileset>
            <fileset dir='${project.dir}/src/main/app/resources/webapp/arwo-war-tomcat6'/>
        </copy>
        <copy todir='${war.app.dir}/WEB-INF/lib' file='${artifact.dir}/arwo.jar'/>
        <exec executable='tree' failifexecutionfails='false'>
            <arg value='${war.app.dir}'/>
        </exec>
        <replace file='${war.app.dir}/index.html'>
            <replacefilter token='IMPLEMENTATION_VERSION' value='${Implementation-Version}'/>
            <replacefilter token='SPECIFICATION_VERSION' value='${Specification-Version}'/>
        </replace>
        <war destfile='${artifact.dir}/arwo.war'>
            <fileset dir='${war.app.dir}'>
                <include name='**/*.*'/>
            </fileset>
            <manifest>
                <attribute name='Implementation-Version' value='${Implementation-Version}'/>
                <attribute name='Specification-Version' value='${Specification-Version}'/>
            </manifest>
        </war>
    </target>

    <target name='dist'>
        <mkdir dir='${target.dir}/dist'/>
        <jar destfile='${target.dir}/dist/arwo-${arwo.version}-tomcat6.zip'>
            <fileset dir='${artifact.dir}'>
                <include name='arwo.war'/>
                <include name='arwo-realm.jar'/>
            </fileset>
            <fileset dir='${project.dir}'>
                <include name='CHANGELOG.md'/>
                <include name='LICENSE'/>
                <include name='README.md'/>
            </fileset>
            <manifest>
                <attribute name='Implementation-Version' value='${Implementation-Version}'/>
                <attribute name='Specification-Version' value='${Specification-Version}'/>
            </manifest>
        </jar>
    </target>

    <target name='main' depends='clean, jar-realm, compile-app, i18n, jar-app, i18n-clean, war-app, dist'>
        <echo message='project.dir: ${project.dir}'/>
    </target>

</project>
