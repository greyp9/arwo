<?xml version='1.0' encoding='UTF-8'?>
<project name='tomcat8-image' default='main' basedir='.'>

    <!-- filesystem location for downloaded images -->
    <property name='image.dir' value='${user.home}/Downloads'/>
    <!-- filesystem location for executable -->
    <property name='tomcat.dir' value='${user.home}/apache-tomcat-8.0.28'/>
    <!-- filesystem location for project -->
    <property name='arwo.dir' value='${basedir}/../../../../../../../arwo'/>

    <target name='verify-tomcat' description='Check Tomcat8 binary against expected checksum.'>
        <checksum file='${image.dir}/apache-tomcat-8.0.28.tar.gz'
                  algorithm='SHA-1' property='cfab54438239a83cf55d5c4091b37165cf992b0f'
                  verifyproperty='sha1-ok-tomcat8'/>
        <fail message='binary checksum does not match'>
            <condition>
                <not>
                    <istrue value='${sha1-ok-tomcat8}'/>
                </not>
            </condition>
        </fail>
    </target>

    <target name='pristine-tomcat' description='Replace Tomcat8 instance in home dir with fresh image from download.'>
        <delete dir='${tomcat.dir}'/>
        <untar compression='gzip' src='${image.dir}/apache-tomcat-8.0.28.tar.gz' dest='${tomcat.dir}'>
            <mapper type='glob' from='apache-tomcat-8.0.28/*' to='*'/>
        </untar>
    </target>

    <target name='fixup-tomcat' description='Modify pristine Tomcat8 image for this environment.'>
        <move tofile='${tomcat.dir}/conf/server.original.xml' file='${tomcat.dir}/conf/server.xml'/>
        <xslt in='${tomcat.dir}/conf/server.original.xml' out='${tomcat.dir}/conf/server.ssl.xml'
              style='${ant.file.tomcat8-image}/../xslt/server.ssl.xslt'/>
        <xslt in='${tomcat.dir}/conf/server.ssl.xml' out='${tomcat.dir}/conf/server.xml'
              style='${ant.file.tomcat8-image}/../xslt/server.ports.xslt'/>
        <move tofile='${tomcat.dir}/conf/tomcat-users.original.xml' file='${tomcat.dir}/conf/tomcat-users.xml'/>
        <xslt in='${tomcat.dir}/conf/tomcat-users.original.xml' out='${tomcat.dir}/conf/tomcat-users.xml'
              style='${ant.file.tomcat8-image}/../xslt/tomcat-users.xslt'/>

        <copy tofile='${tomcat.dir}/conf/Catalina/localhost/css-static.xml'
              file='${arwo.dir}/src/test/app/resources/ant/tomcat8/webapp/css-static/css-static.xml'/>
        <copy tofile='${tomcat.dir}/conf/Catalina/localhost/html-static.xml'
              file='${arwo.dir}/src/test/app/resources/ant/tomcat8/webapp/html-static/html-static.xml'/>
        <copy tofile='${tomcat.dir}/conf/logging.properties'
              file='${arwo.dir}/src/test/app/resources/ant/tomcat8/logging/logging.properties'/>
    </target>

    <target name='deploy-arwo' description='add arwo application to Tomcat8 instance' if='arwo'>
        <echo message='deploy arwo application'/>
        <ant antfile='${arwo.dir}/src/main/app/resources/ant/app-tomcat8/build.app-tomcat8.xml'
             description='assemble app artifacts'/>
        <!--webapp realm implementation-->
        <copy file='${arwo.dir}/target/app-tomcat8/artifact/arwo-realm.jar' todir='${tomcat.dir}/lib'/>
        <!--webapp instance(s)-->
        <copy file='${arwo.dir}/target/app-tomcat8/artifact/arwo.war' tofile='${tomcat.dir}/webapps/arwo.war'/>
    </target>

    <target name='tomcat' description='Spawn a Tomcat8 instance.' depends='deploy-arwo'>
        <property name='ssl.dir' value='${user.home}/.arwo/ssl'/>

        <path id='classpath-tomcat'>
            <fileset dir='${tomcat.dir}'>
                <include name='bin/*.jar'/>
                <include name='lib/*.jar'/>
            </fileset>
        </path>
        <java classname='org.apache.catalina.startup.Bootstrap' classpathref='classpath-tomcat' fork='true'
              dir='${tomcat.dir}' jvm='/usr/lib/jvm/java-7-openjdk-amd64/bin/java'>
            <jvmarg value='-Djava.util.logging.config.file=${tomcat.dir}/conf/logging.properties'/>
            <jvmarg value='-Dssl.dir=${ssl.dir}'/>
            <jvmarg value='-Xdebug'/>
            <jvmarg value='-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8820'/>
        </java>
    </target>

    <target name='restart' description='*Spawn clean Tomcat8 image.'
            depends='verify-tomcat, pristine-tomcat, fixup-tomcat, start'/>

    <target name='start' description='*Spawn Tomcat8 image.' depends='tomcat'/>

    <target name='main' description='Use -p to view help information.'/>

</project>
